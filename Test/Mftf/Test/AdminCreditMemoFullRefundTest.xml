<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreditMemoFullRefundTest">
        <annotations>
            <stories value="Tax Calculations"/>
            <title value="Verify full credit memo | Owner : Nirav Patel"/>
            <description value="CONNECT-41667, CONNECT-41670 - Verify full credit memo"/>
            <severity value="MINOR"/>
            <testCaseId value="C3891568"/>
            <group value="avatax_tax_calculation"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="LoginAsAdmin"/>

            <!-- Create Data -->
            <createData entity="CustomerEntityOne" stepKey="createCustomer"/>
            <createData entity="SalesTaxDefaultCategory" stepKey="createCategory"/>
            <createData entity="SalesTaxSimpleProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>

            <!-- Enable payment method one of "Check/Money Order" and  shipping method one of "Flat Rate" -->
            <magentoCLI command="config:set {{enabledCheckMoneyOrder.label}} {{enabledCheckMoneyOrder.value}}" stepKey="enableCheckMoneyOrder"/>
            <createData entity="FlatRateShippingMethodConfig" stepKey="enableFlatRate"/>
            <actionGroup ref="CliCacheCleanActionGroup" stepKey="cleanInvalidatedCaches">
                <argument name="tags" value="config full_page"/>
            </actionGroup>
        </before>
        <after>
            <!-- Delete data -->
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createProduct" stepKey="deleteProduct"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>

        <!-- Create Order -->
        <actionGroup ref="NavigateToNewOrderPageExistingCustomerActionGroup" stepKey="navigateToNewOrderPage">
            <argument name="customer" value="$createCustomer$"/>
        </actionGroup>
        <actionGroup ref="AddSimpleProductToOrderActionGroup" stepKey="addSecondProduct">
            <argument name="product" value="$createProduct$"/>
            <argument name="productQty" value="1"/>
        </actionGroup>
        <actionGroup ref="FillOrderCustomerInformationActionGroup" stepKey="fillCustomerInfo">
            <argument name="customer" value="$createCustomer$"/>
            <argument name="address" value="SalesTaxCustomerAddressSimple"/>
        </actionGroup>
        <actionGroup ref="OrderSelectFlatRateShippingActionGroup" stepKey="selectFlatRate"/>
        <actionGroup ref="SelectCashOnDeliveryPaymentMethodActionGroup" stepKey="selectPaymentMethod"/>
        <click selector="{{OrdersGridSection.submitOrder}}" stepKey="submitOrder"/>
        <waitForPageLoad stepKey="waitForSubmitOrderPage"/>
        <see stepKey="seeSuccessMessageForOrder" userInput="You created the order."/>

        <!-- Create Invoice -->
        <actionGroup ref="StartCreateInvoiceFromOrderPageActionGroup" stepKey="startInvoice"/>
        <click selector="{{AdminInvoiceMainActionsSection.submitInvoice}}" stepKey="clickSubmitInvoice"/>
        <waitForElementVisible selector="{{AdminMessagesSection.success}}" stepKey="waitForMessageAppears"/>
        <see selector="{{AdminMessagesSection.success}}" userInput="The invoice has been created." stepKey="seeInvoiceCreateSuccess"/>

        <!-- Go to Sales > Orders > find out placed order and open -->
        <grabTextFrom selector="|Order # (\d+)|" stepKey="grabOrderId" />
        <assertNotEmpty stepKey="assertOrderIdIsNotEmpty" after="grabOrderId">
			<actualResult type="const">$grabOrderId</actualResult>
        </assertNotEmpty>
        <actionGroup ref="OpenOrderByIdActionGroup" stepKey="openOrder">
            <argument name="orderId" value="{$grabOrderId}"/>
        </actionGroup>

        <!-- Click 'Credit Memo' button and fill data from dataset: partial refund -->
        <actionGroup ref="AdminOpenAndFillCreditMemoRefundStoreCreditActionGroup" stepKey="fillCreditMemoRefund">
            <argument name="itemQtyToRefund" value="1"/>
            <argument name="shippingRefund" value="5"/>
            <argument name="refund" value="10"/>
        </actionGroup>

        <!-- On order's page click 'Refund offline' button -->
        <scrollTo selector="{{AdminCreditMemoTotalSection.submitRefundOffline}}" stepKey="scrollTOButton"/>
        <click selector="{{AdminCreditMemoTotalSection.submitRefundOffline}}" stepKey="clickRefundOffline"/>
        <waitForPageLoad stepKey="waitForResultPage"/>

        <!-- Perform all assertions: assert refund success create message -->
        <see selector="{{AdminIndexManagementSection.successMessage}}" userInput="You created the credit memo." stepKey="assertRefundSuccessCreateMessage"/>

        <!-- Assert No Credit Memo button -->
        <dontSeeElement selector="{{AdminOrderFormItemsSection.creditMemo}}" stepKey="assertNoCreditMemoButton"/>

        <!--Assert refund in Credit Memo Tab-->
        <click selector="{{AdminOrderDetailsOrderViewSection.creditMemos}}" stepKey="clickCreditMemoTab"/>
        <waitForPageLoad stepKey="waitForTabLoad"/>
        <grabTextFrom selector="{{AdminCreditMemosGridSection.memoId}}" stepKey="grabMemoId"/>
        <assertNotEmpty stepKey="assertMemoIdIsNotEmpty" after="grabMemoId">
			<actualResult type="const">$grabMemoId</actualResult>
        </assertNotEmpty>
        <click selector="{{AdminCreditMemosGridSection.memoId}}" stepKey="clickView"/>
        <waitForPageLoad stepKey="waitForCreditMemo"/>
        <scrollTo selector="{{AdminCreditMemoTotalSection.grandTotal}}" stepKey="scrollToTotal"/>
        <see selector="{{AdminCreditMemoTotalSection.grandTotal}}" userInput="$58.88" stepKey="assertRefundOnCreditMemoTab"/>

        <!-- Assert CreditMemo items -->
        <scrollTo selector="{{AdminCreditMemoViewItemsSection.blockItemsRefunded}}" stepKey="scrollToRefundedItems"/>
        <see userInput="$$createProduct.name$$" selector="{{AdminCreditMemoViewItemsSection.productName}}" stepKey="seeProductName"/>
        <see userInput="$$createProduct.price$$" selector="{{AdminCreditMemoViewItemsSection.productPrice}}" stepKey="seePricePerItem"/>
        <see userInput="1" selector="{{AdminCreditMemoViewItemsSection.productQty}}" stepKey="seeQty"/>

        <!-- Go to order page -->
        <actionGroup ref="OpenOrderByIdActionGroup" stepKey="openOrderPage">
            <argument name="orderId" value="{$grabOrderId}"/>
        </actionGroup>
    </test>
</tests>
