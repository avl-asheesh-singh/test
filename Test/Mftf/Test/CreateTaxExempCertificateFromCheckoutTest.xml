<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="CreateTaxExempCertificateFromCheckoutTest">
        <annotations>
            <features value="Verify that user is able to create a New Tax Certificate from Checkout page using GenCert popup to exempt from Tax Calculation"/>
            <stories value="Tax Exemptions"/>
            <title value="Customer Login : Tax Exemption certificate creation from checkout page | Owner: Nikita Torane"/>
            <description value="CONNECT-41681 ,CONNECT-41886 : Verify that user is able to create a New Tax Certificate from Checkout page using GenCert popup to exempt from Tax Calculation"/>
            <severity value="MINOR"/>
            <testCaseId value="C3889333"/>
            <group value="avatax_tax_exemption"/>
        </annotations>

        <before>
            <createData entity="SimpleSubCategory" stepKey="createCategory"/>
            <createData entity="CrossBorderSimpleProduct" stepKey="createSimpleProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="Simple_Customer_CA" stepKey="createCustomer"/>
            <comment userInput="Adding the comment to replace CliIndexerReindexActionGroup action group ('indexer:reindex' commands) for preserving Backward Compatibility" stepKey="reindex"/>
        </before>
        <after>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutStorefront"/>
            <deleteData createDataKey="createSimpleProduct" stepKey="deleteSimpleProduct"/>
            <deleteData createDataKey="createSimpleProduct2" stepKey="deleteSimpleProduct2"/>
            <deleteData createDataKey="createCategory" stepKey="deleteSimpleCategory"/>
            <deleteData createDataKey="createCustomer" stepKey="deleteUsCustomer"/>
        </after>

        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="storefrontCustomerLogin">
            <argument name="Customer" value="$$createCustomer$$"/>
        </actionGroup>

        <actionGroup ref="StorefrontNavigateCategoryPageActionGroup" stepKey="navigateToCategoryPage">
            <argument name="category" value="$$createCategory$$"/>
        </actionGroup>
        <waitForPageLoad stepKey="waitForCatalogPageLoad"/>
        <actionGroup ref="StorefrontAddCrossBorderProductToCartActionGroup" stepKey="addProduct2ToCart">
            <argument name="product" value="$$createSimpleProduct2$$"/>
            <argument name="productCount" value="CONST.one"/>
        </actionGroup>
        <wait time="10" stepKey="waitTenSeconds"/>
        <actionGroup ref="StorefrontAddCrossBorderProductToCartActionGroup" stepKey="addProductToCart">
            <argument name="product" value="$$createSimpleProduct$$"/>
            <argument name="productCount" value="CONST.two"/>
        </actionGroup>
        <wait time="10" stepKey="waitforTenSeconds"/>
     <!--   <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="goToCheckoutFromMinicart"/>
        <actionGroup ref="CheckoutSelectFlatRateShippingMethodActionGroup" stepKey="selectFlatRate"/>
        <actionGroup ref="StorefrontCheckoutForwardFromShippingStepActionGroup" stepKey="goToReview"/>
        <actionGroup ref="CheckoutSelectCheckMoneyOrderPaymentActionGroup" stepKey="selectCheckMoneyOrder"/> -->

         <!--Open View and edit -->
        <actionGroup ref="ClickViewAndEditCartFromMiniCartActionGroup" stepKey="openCartFromMiniCart"/>

        <!-- Fill the Estimate Shipping and Tax section -->
        <actionGroup ref="SimpleStorefrontCartEstimateShippingAndTaxActionGroup" stepKey="fillEstimateShippingAndTaxFields"/>
        <actionGroup ref="CheckoutSelectFlatRateShippingMethodActionGroup" stepKey="selectFlatRate"/>

        <!-- Click on "New Address" button -->
        <actionGroup ref="StorefrontClickAddNewAddressButtonFromCheckoutShippingActionGroup" stepKey="clickAddAddressButton"/>
        
        <!-- Clear the checkout address popup fields -->
        <actionGroup ref="clearCheckoutAddressPopupFieldsActionGroup" stepKey="clearCheckoutAddressPopupFields"/>

        <!-- fill the checkout address popup fields -->
        <actionGroup ref="LoggedInUserCheckoutFillCAShippingSectionActionGroup" stepKey="fillCheckoutAddressPopupFields"/>

         <!-- Verify if tax is displayed --> 
        <see selector="{{StorefrontAvaTaxCheckoutOrderSummarySection.Tax}}" userInput="Tax" stepKey="seeTaxInOrderSummary"/>

         <!-- Click on Create new certificate link --> 
        <click selector="{{StorefrontAvaTaxCheckoutOrderSummarySection.newCertText}}" stepKey="newCertText"/>

        <!-- Complete the certficate creation process --> 
        <actionGroup ref="TaxExepmptionTaxInformationPopUpActionGroup" stepKey="fillTaxInformation"/>
        <actionGroup ref="TaxExemReasonForDccPopUpActionGroup" stepKey="clickTaxExemReasonForDoc"/>
        <actionGroup ref="TaxExemptionBusinessInformationActionGroup" stepKey="enterBusinessInformation"/>
        <actionGroup ref="TaxExemptionSignerInformationActionGroup" stepKey="enterSignerInfor"/>
        <actionGroup ref="TaxExemptLoaderActionGroup" stepKey="waiForLoader"/>
        <waitForPageLoad stepKey="waitForOrderSummaryLoader"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMask"/>
        <wait time="10" stepKey="waitTenSeconds2"/>
        <switchToIFrame stepKey="switchBackToMainFrame"/>
         <!-- Verify if success message is displayed --> 
        <waitForElementVisible selector="{{StorefrontAvaTaxCheckoutOrderSummarySection.taxCertSuccessMessage2}}" stepKey="waitForSuccessMessage"/>
        <waitForElementVisible selector="{{StorefrontAvaTaxCheckoutOrderSummarySection.applyCertificate}}" stepKey="waitForApplyCertificate"/>
        <click selector="{{StorefrontAvaTaxCheckoutOrderSummarySection.applyCertificate}}" stepKey="clickApplyCertificate"/>
       <!-- <waitForLoadingMaskToDisappear stepKey="waitForLoadingMask1"/>
        <actionGroup ref="CheckoutSelectCheckMoneyOrderPaymentActionGroup" stepKey="selectCheckMoneyOrder"/>
        <actionGroup ref="CheckoutPlaceOrderActionGroup" stepKey="clickOnPlaceOrder">
            <argument name="orderNumberMessage" value="CONST.successCheckoutOrderNumberMessage"/>
            <argument name="emailYouMessage" value="CONST.successCheckoutEmailYouMessage"/>
        </actionGroup>
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber22}}" stepKey="orderNumber"/> -->
        
    </test>
</tests>
